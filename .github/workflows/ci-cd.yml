name: CI/CD Pipeline

on:
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        volumes:
          - mongo-data:/data/db
        env:
          MONGO_INITDB_DATABASE: editor
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }} 
          password: ${{ secrets.DOCKER_HUB_TOKEN }}   

      - name: Build and push Java image
        uses: docker/build-push-action@v3
        with:
          context: ./CollabCode/Dockerfiles/java
          file: Dockerfile
          push: true
          tags: your-dockerhub-username/java-container:latest

      - name: Build and push Python image
        uses: docker/build-push-action@v3
        with:
          context: ./CollabCode/Dockerfiles/python
          file: Dockerfile
          push: true
          tags: your-dockerhub-username/python-container:latest

      - name: Build and push Spring app image
        uses: docker/build-push-action@v3
        with:
          context: ./CollabCode
          push: true
          tags: your-dockerhub-username/spring-app:latest

      - name: Build and push React app image
        uses: docker/build-push-action@v3
        with:
          context: ./code-editor-frontend
          push: true
          tags: your-dockerhub-username/react-app:latest

      - name: Deploy to AWS EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@98.81.79.167 << 'ENDSSH'
            cd /home/alnimreen/capston-project
            docker-compose pull
            docker-compose up -d
          ENDSSH
